<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chor&#39;s Blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chorer.github.io/"/>
  <updated>2019-03-06T13:50:14.236Z</updated>
  <id>https://chorer.github.io/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sublime Text3插件简易使用教程</title>
    <link href="https://chorer.github.io/2019/03/06/To-Sublime%20Text3%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://chorer.github.io/2019/03/06/To-Sublime Text3简易使用教程/</id>
    <published>2019-03-06T12:44:45.731Z</published>
    <updated>2019-03-06T13:50:14.236Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="Tool" scheme="https://chorer.github.io/categories/Tool/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;译&gt;如何用原生JS打造一款简易谷歌插件</title>
    <link href="https://chorer.github.io/2019/03/05/Trs-%E5%A6%82%E4%BD%95%E7%94%A8%E5%8E%9F%E7%94%9Fjs%E6%89%93%E9%80%A0%E4%B8%80%E6%AC%BE%E7%AE%80%E6%98%93%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6/"/>
    <id>https://chorer.github.io/2019/03/05/Trs-如何用原生js打造一款简易谷歌插件/</id>
    <published>2019-03-05T13:52:13.915Z</published>
    <updated>2019-03-06T12:31:05.306Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;原文: &lt;a href=&quot;https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-how-to-build-a-simple-chrome-extension-in-vanilla-javascript-e52b2994aeeb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to Build a Simple Chrome Extension in Vanilla JavaScript&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://chorer.github.io/categories/Translation/"/>
    
    
  </entry>
  
  <entry>
    <title>事件循环</title>
    <link href="https://chorer.github.io/2019/03/05/F-%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    <id>https://chorer.github.io/2019/03/05/F-事件循环/</id>
    <published>2019-03-05T05:15:56.538Z</published>
    <updated>2019-03-05T13:13:34.155Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/event-loop.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="事件队列" scheme="https://chorer.github.io/tags/%E4%BA%8B%E4%BB%B6%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>HTMLCollection 和 NodeList</title>
    <link href="https://chorer.github.io/2019/03/04/F-HTML%20Collection%E5%92%8CNodelist/"/>
    <id>https://chorer.github.io/2019/03/04/F-HTML Collection和Nodelist/</id>
    <published>2019-03-04T08:24:03.526Z</published>
    <updated>2019-03-04T08:34:24.652Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;或者&lt;code&gt;NodeList&lt;/code&gt;都是类数组的对象，指的是DOM节点的集合。当获得所有节点（如：&lt;code&gt;getElementsByTagName&lt;/code&gt;）或者获得所有子元素（如：&lt;code&gt;element.childNodes&lt;/code&gt;）时，实际上返回的是一些节点的集合，也即返回&lt;code&gt;HTMLCollection&lt;/code&gt;或者&lt;code&gt;NodeList&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>闭包和计数器</title>
    <link href="https://chorer.github.io/2019/03/04/F-%E9%97%AD%E5%8C%85%E5%92%8C%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    <id>https://chorer.github.io/2019/03/04/F-闭包和计数器/</id>
    <published>2019-03-04T08:05:57.347Z</published>
    <updated>2019-03-04T08:51:33.552Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;之前想不通的一道题—–主要是不知道思路怎么来的，为何会想到用闭包。本来打算就将原博客转载过来，但是刚刚重新审视这道题的时候，好像看到了以前没有发现的东西，有种恍然大悟的感觉，所以决定用自己的话来解释这道题的思路。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="闭包" scheme="https://chorer.github.io/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>如何在Stack Overflow规范提问</title>
    <link href="https://chorer.github.io/2019/03/03/T-%E5%A6%82%E4%BD%95%E5%9C%A8Stack%20Overflow%E8%A7%84%E8%8C%83%E6%8F%90%E9%97%AE/"/>
    <id>https://chorer.github.io/2019/03/03/T-如何在Stack Overflow规范提问/</id>
    <published>2019-03-03T02:02:31.078Z</published>
    <updated>2019-03-04T04:18:35.166Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/So.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>经典面试题解析</title>
    <link href="https://chorer.github.io/2019/03/02/F-%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <id>https://chorer.github.io/2019/03/02/F-经典面试题解析/</id>
    <published>2019-03-02T06:46:53.480Z</published>
    <updated>2019-03-05T08:58:27.047Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;本篇博客专门用于收集各类经典面试题，并给出相关的解题思路和原理。&lt;/p&gt;&lt;h3 id=&quot;1-考点：块级作用域和闭包&quot;&gt;&lt;a href=&quot;#1-考点：块级作用域和闭包&quot; class=&quot;headerlink&quot; title=&quot;1.考点：块级作用域和闭包&quot;&gt;&lt;/a&gt;1.考点：块级作用域和闭包&lt;/h3&gt;&lt;p&gt;先看一道很经典的面试题&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a=[];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a[i] = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>原型式继承和类式继承</title>
    <link href="https://chorer.github.io/2019/03/02/F-%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF%E5%92%8C%E7%B1%BB%E5%BC%8F%E7%BB%A7%E6%89%BF/"/>
    <id>https://chorer.github.io/2019/03/02/F-原型式继承和类式继承/</id>
    <published>2019-03-02T05:32:02.254Z</published>
    <updated>2019-03-02T06:41:51.491Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;java和js都是面向对象的语言，但二者的继承方式截然不同。前者采用基于类的继承（classical inheritence），也是大多数面向对象语言的继承方式。而后者是唯一采用基于原型继承（prototype ineritence）的语言。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>深入理解闭包</title>
    <link href="https://chorer.github.io/2019/02/27/F-%E9%97%AD%E5%8C%85/"/>
    <id>https://chorer.github.io/2019/02/27/F-闭包/</id>
    <published>2019-02-27T06:57:13.203Z</published>
    <updated>2019-03-04T08:02:51.068Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/%E4%B8%8B%E8%BD%BD.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="闭包" scheme="https://chorer.github.io/tags/%E9%97%AD%E5%8C%85/"/>
    
      <category term="作用域" scheme="https://chorer.github.io/tags/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    
      <category term="执行上下文" scheme="https://chorer.github.io/tags/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>大一下的一些计划</title>
    <link href="https://chorer.github.io/2019/02/24/T-%E5%A4%A7%E4%B8%80%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A1%E5%88%92/"/>
    <id>https://chorer.github.io/2019/02/24/T-大一下的一些计划/</id>
    <published>2019-02-24T14:48:36.805Z</published>
    <updated>2019-02-27T06:55:49.766Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;1.关于英语&lt;br&gt;准备英语竞赛和四级考试，重点是听力和写作；&lt;/p&gt;&lt;p&gt;2.前端&lt;/p&gt;&lt;p&gt;2.1. 旧东西的收尾，具体来说包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;妙味课堂视频（进阶系列），这部分的速度尽量加快&lt;/li&gt;&lt;li&gt;SegmentFault上js进阶的相关文章。由于是js中的难点，并且在面试中出现比较多，所以慢慢来。打算是每周攻克一个或两个&lt;br&gt;【进阶1期】 调用堆栈&lt;br&gt;【进阶2期】 作用域闭包&lt;br&gt;【进阶3期】 this全面解析&lt;br&gt;【进阶4期】 深浅拷贝原理&lt;br&gt;【进阶5期】 原型Prototype&lt;br&gt;【进阶6期】 高阶函数&lt;br&gt;【进阶7期】 事件机制&lt;br&gt;【进阶8期】 Event Loop原理&lt;br&gt;【进阶9期】 Promise原理&lt;br&gt;【进阶10期】Async/Await原理&lt;br&gt;【进阶11期】防抖/节流原理&lt;br&gt;【进阶12期】模块化详解&lt;br&gt;【进阶13期】ES6重难点&lt;br&gt;【进阶14期】计算机网络概述&lt;br&gt;【进阶15期】浏览器渲染原理
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>深入理解line-height</title>
    <link href="https://chorer.github.io/2019/02/20/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3line-height/"/>
    <id>https://chorer.github.io/2019/02/20/F-深入理解line-height/</id>
    <published>2019-02-20T13:36:35.302Z</published>
    <updated>2019-02-20T14:07:55.555Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;1-相关概念普及：&quot;&gt;&lt;a href=&quot;#1-相关概念普及：&quot; class=&quot;headerlink&quot; title=&quot;1.相关概念普及：&quot;&gt;&lt;/a&gt;1.相关概念普及：&lt;/h2&gt;&lt;p&gt;1.1 &lt;span style=&quot;background-color:#fffa7d&quot;&gt;顶线，中线，基线和底线&lt;/span&gt; ：&lt;br&gt;直接见下图。inline-block和inline都可以有这四种线。其中，我们重点研究基线，即base line。基线并不是汉字文字的下端沿，而是英文字母“x”的下端沿。&lt;br&gt;1.2 &lt;span style=&quot;background-color:#fffa7d&quot;&gt;行高&lt;/span&gt;：&lt;br&gt;即line-height，是指同一个元素中，两个文本行基线间的垂直距离。&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width:170px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size:16px;line-height:20px;background:red;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     I&#39;m the first line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size:16px; line-height:40px;background:green;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     I&#39;m the second line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="HTML &amp; CSS" scheme="https://chorer.github.io/categories/Front-end/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>提问的智慧</title>
    <link href="https://chorer.github.io/2019/02/18/T-%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    <id>https://chorer.github.io/2019/02/18/T-提问的智慧/</id>
    <published>2019-02-18T11:28:55.689Z</published>
    <updated>2019-02-18T12:57:39.245Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/11111111111111111111111111111.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>游戏往事</title>
    <link href="https://chorer.github.io/2019/02/18/G-%E6%B8%B8%E6%88%8F%E5%BE%80%E4%BA%8B/"/>
    <id>https://chorer.github.io/2019/02/18/G-游戏往事/</id>
    <published>2019-02-18T05:29:33.203Z</published>
    <updated>2019-02-20T09:05:07.902Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;对以前游玩刺客信条系列时的一些简单记录。&lt;/p&gt;&lt;h4 id=&quot;gt-gt-佛罗伦萨&quot;&gt;&lt;a href=&quot;#gt-gt-佛罗伦萨&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt;&amp;gt;佛罗伦萨&quot;&gt;&lt;/a&gt;&amp;gt;&amp;gt;佛罗伦萨&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/1.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Gaming" scheme="https://chorer.github.io/categories/Gaming/"/>
    
    
  </entry>
  
  <entry>
    <title>关于js对象和jq对象的疑问</title>
    <link href="https://chorer.github.io/2019/02/15/F-jq%E5%AF%B9%E8%B1%A1%E5%92%8Cjs%E5%AF%B9%E8%B1%A1/"/>
    <id>https://chorer.github.io/2019/02/15/F-jq对象和js对象/</id>
    <published>2019-02-15T12:03:55.572Z</published>
    <updated>2019-02-18T13:26:28.398Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;问题：想要使所有div下的p标签的类名+1.因此采用下列办法：&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;https://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; allp=$(&lt;span class=&quot;string&quot;&gt;&quot;div p&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;allp.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allp[i].attr(&lt;span class=&quot;string&quot;&gt;&quot;class&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;i+2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(allp[i].attr(&lt;span class=&quot;string&quot;&gt;&quot;class&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="jQuery" scheme="https://chorer.github.io/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建：编辑工具的选择</title>
    <link href="https://chorer.github.io/2019/02/15/To-%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>https://chorer.github.io/2019/02/15/To-编辑工具的选择/</id>
    <published>2019-02-15T08:09:05.306Z</published>
    <updated>2019-03-06T12:45:32.753Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;Hexo是静态博客网站，必须先在本地编辑好md文件再推送到网站上去—md文件也就是所谓的用markdown语法编写内容的文件。“工欲善其事，必先利其器”，因此我们需要一个合适的markdown编辑工具，它必须具备以下特点：&lt;br&gt;1.可导出md文件到本地，并随时进行修改&lt;br&gt;2.可提供分屏预览，支持同步滚动和定位&lt;br&gt;3.启动时响应速度快，编辑时渲染速度快&lt;/p&gt;&lt;p&gt;以下是一些工具在markdown编写方面的优劣比较，可酌情进行选择。&lt;br&gt;（平台：windows）&lt;br&gt;
    
    </summary>
    
      <category term="Tool" scheme="https://chorer.github.io/categories/Tool/"/>
    
    
      <category term="编辑工具" scheme="https://chorer.github.io/tags/%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建：Hexo+Github pages</title>
    <link href="https://chorer.github.io/2019/02/15/T-hexo+github%20pages%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E6%84%9F%E6%83%B3/"/>
    <id>https://chorer.github.io/2019/02/15/T-hexo+github pages部署个人博客网站的感想/</id>
    <published>2019-02-15T07:35:45.000Z</published>
    <updated>2019-02-18T11:19:39.007Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;初衷：之前我习惯用印象笔记进行知识的收集和整理，虽然很好用，但终归只适合输入而不适合输出。我需要的是一个更加开放的平台，在这上面可以输出： 1.&lt;strong&gt;学习的收获 ；2.生活的感想 ；3.有价值的分享&lt;/strong&gt;，因此有了这个博客网站。&lt;/p&gt;&lt;p&gt;用hexo+github pages 可以很方便地搭建一个个人博客网站，不需要购买域名和服务器，只需要按部就班操作即可。我自己大概是花了两三个小时搞定，主要是因为对git bash的使用不够熟悉，因此走了一些弯路。实际上动作快的话半个小时就可以搞定。下面是对部署过程的大概介绍，以及&lt;strong&gt;必须注意的事项&lt;/strong&gt;（划重点，也就是所谓的“坑”）。由于本文参考了大量博客，所以在文末我会列出原文链接。&lt;/p&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
      <category term="博客搭建" scheme="https://chorer.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="https://chorer.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>DOM Core 与 HTML-DOM</title>
    <link href="https://chorer.github.io/2019/02/14/F-DOM%20Core%20%E5%92%8CHTML%20DOM/"/>
    <id>https://chorer.github.io/2019/02/14/F-DOM Core 和HTML DOM/</id>
    <published>2019-02-14T14:29:46.509Z</published>
    <updated>2019-02-18T10:44:55.494Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;DOM（文档对象模型）是由W3C制定的一套访问和操作XML（eXtensible Markup Language）文档的标准，即API。比如DOM告诉JavaScript引擎如何在浏览器窗口中显示和操作XML创建的标记（Tag）。&lt;/p&gt;&lt;p&gt;DOM与特定的平台、浏览器、语言无关，很多种语言都实现了DOM，比如因为JavaScript和PHP都实现了DOM，所以 JavaScript中有getElementsByTagName()方法，PHP中也有 getElementsByTagName()，getElementsByTagName()方法是DOM规定的访问XML文档的接口。&lt;/p&gt;&lt;p&gt;XML与HTML相似，但两者是有区别。XML和HTML都来自于SGML，它们都含有标记，有着相似的语法，HTML和XML的最大区别在 于：HTML是一个定型的标记语言，用固定的标记来描述和显示数据，比如&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="概念" scheme="https://chorer.github.io/tags/%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>事件相关概念详解</title>
    <link href="https://chorer.github.io/2019/02/13/F-%E4%BA%8B%E4%BB%B6%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E8%AF%A6%E8%A7%A3/"/>
    <id>https://chorer.github.io/2019/02/13/F-事件相关概念详解/</id>
    <published>2019-02-13T11:35:36.914Z</published>
    <updated>2019-02-18T10:44:43.103Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;事件&lt;/strong&gt;：事件是用户或浏览器自身执行的某种动作，如click,load和mouseover都是事件的名字。响应某个事件的函数叫做事件处理函数 / 事件处理程序 / 事件句柄。如果想要绑定多个函数，则需要用到事件监听器。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;1-事件绑定的几种方式&quot;&gt;&lt;a href=&quot;#1-事件绑定的几种方式&quot; class=&quot;headerlink&quot; title=&quot;1. 事件绑定的几种方式&quot;&gt;&lt;/a&gt;1. 事件绑定的几种方式&lt;/h2&gt;&lt;p&gt;javascript给DOM绑定事件处理函数总的来说有2种方式：在html文档中绑定、在js代码中绑定。下面的方式1、方式2属于在html中绑定事件，方式3、方式4和方式5属于在js代码中绑定事件，其中，方式4和5属于事件监听，而方式5是最推荐的做法。&lt;/p&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="事件" scheme="https://chorer.github.io/tags/%E4%BA%8B%E4%BB%B6/"/>
    
      <category term="dom事件流" scheme="https://chorer.github.io/tags/dom%E4%BA%8B%E4%BB%B6%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>变量的两种命名方式</title>
    <link href="https://chorer.github.io/2019/02/12/F-%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%91%BD%E5%90%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://chorer.github.io/2019/02/12/F-变量的两种命名方法/</id>
    <published>2019-02-12T13:56:18.000Z</published>
    <updated>2019-02-18T10:46:47.908Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;一、驼峰命名法：&quot;&gt;&lt;a href=&quot;#一、驼峰命名法：&quot; class=&quot;headerlink&quot; title=&quot;一、驼峰命名法：&quot;&gt;&lt;/a&gt;一、驼峰命名法：&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;①全部小写&lt;/strong&gt;：变量名中的每一个逻辑断点/每个单词都用下划线隔开。比如：print_employee_paychecks()；&lt;br&gt;&lt;strong&gt;②大小写混合&lt;/strong&gt;：&lt;br&gt;1）&lt;em&gt;小驼峰法&lt;/em&gt;：&lt;br&gt;变量一般用小驼峰法标识。第一个单词以小写字母开始；第二个单词的首字母大写或每一个单词的首字母都采用大写字母，例如：myFirstName、myLastName&lt;br&gt;2）&lt;em&gt;大驼峰法/帕斯卡命名法（Upper Camel Case/pascal）&lt;/em&gt;：&lt;br&gt;常用于类名，函数名，属性，命名空间。相比小驼峰法，大驼峰法把第一个单词的首字母也大写了。例如：DataBaseUser&lt;/p&gt;&lt;h2 id=&quot;二、匈牙利命名法：&quot;&gt;&lt;a href=&quot;#二、匈牙利命名法：&quot; class=&quot;headerlink&quot; title=&quot;二、匈牙利命名法：&quot;&gt;&lt;/a&gt;二、匈牙利命名法：&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="命名" scheme="https://chorer.github.io/tags/%E5%91%BD%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>null和undefined</title>
    <link href="https://chorer.github.io/2019/02/12/F-null%E5%92%8Cundefined/"/>
    <id>https://chorer.github.io/2019/02/12/F-null和undefined/</id>
    <published>2019-02-12T12:08:47.000Z</published>
    <updated>2019-02-18T10:45:39.550Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Mar 06 2019 21:50:28 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;一-undefined在变量声明中的体现：&quot;&gt;&lt;a href=&quot;#一-undefined在变量声明中的体现：&quot; class=&quot;headerlink&quot; title=&quot;一. undefined在变量声明中的体现：&quot;&gt;&lt;/a&gt;一. undefined在变量声明中的体现：&lt;/h2&gt;&lt;p&gt;1）声明了、但是没有初始化的变量：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;var aa;
alert(aa);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器会弹出窗口显示 &lt;code&gt;undefined&lt;/code&gt;。因为对于使用了 &lt;code&gt;var&lt;/code&gt; 声明但没有进行初始化定义的变量, 其值默认为 &lt;code&gt;undefined&lt;/code&gt;.&lt;br&gt;2） 未声明的变量(1)：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;alert(aa);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器不会弹出任何东西. 因为 aa 是没有声明的变量。打开 chrome 浏览器的控制台会看到报错如下：&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://chorer.github.io/tags/JavaScript/"/>
    
      <category term="数据类型" scheme="https://chorer.github.io/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
</feed>
