<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chor&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chorer.github.io/"/>
  <updated>2019-04-13T09:06:18.290Z</updated>
  <id>https://chorer.github.io/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>由一道题引发的思考</title>
    <link href="https://chorer.github.io/2019/04/13/T-%E7%94%B1%E4%B8%80%E9%81%93%E9%A2%98%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>https://chorer.github.io/2019/04/13/T-由一道题引发的思考/</id>
    <published>2019-04-13T06:48:58.729Z</published>
    <updated>2019-04-13T09:06:18.290Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;“不惧怕争论，也不要带情绪，保持理性争论才能获得提升。有时候一直以来以为正确的，说不好真实不一定就是你想的那样。”&lt;br&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>深入理解变量对象、作用域链和闭包</title>
    <link href="https://chorer.github.io/2019/04/10/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%98%E9%87%8F%E5%AF%B9%E8%B1%A1%E3%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E5%92%8C%E9%97%AD%E5%8C%85/"/>
    <id>https://chorer.github.io/2019/04/10/F-深入理解变量对象、作用域链和闭包/</id>
    <published>2019-04-10T06:52:12.957Z</published>
    <updated>2019-04-13T02:13:09.286Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;执行上下文、执行栈、作用域链、闭包，这其实是一整套相关的东西，之前&lt;a href=&quot;https://chorer.github.io/2019/03/04/F-%E9%97%AD%E5%8C%85/&quot;&gt;转载的文章&lt;/a&gt;也有讲到这些。下面两篇文章会更加详细地解释这些概念。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://chorer.github.io/2019/04/08/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E5%92%8C%E6%89%A7%E8%A1%8C%E6%A0%88/&quot;&gt;深入理解执行上下文和执行栈&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://chorer.github.io/2019/04/10/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%98%E9%87%8F%E5%AF%B9%E8%B1%A1%E3%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E5%92%8C%E9%97%AD%E5%8C%85/&quot;&gt;深入理解变量对象、作用域链和闭包&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/execution%20context/scope-closure.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="闭包" scheme="https://chorer.github.io/tags/%E9%97%AD%E5%8C%85/"/>
    
      <category term="变量对象" scheme="https://chorer.github.io/tags/%E5%8F%98%E9%87%8F%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="作用域链" scheme="https://chorer.github.io/tags/%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>深入理解执行上下文和执行栈</title>
    <link href="https://chorer.github.io/2019/04/08/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E5%92%8C%E6%89%A7%E8%A1%8C%E6%A0%88/"/>
    <id>https://chorer.github.io/2019/04/08/F-深入理解执行上下文和执行栈/</id>
    <published>2019-04-08T15:26:28.366Z</published>
    <updated>2019-04-12T14:19:56.435Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;执行上下文、执行栈、作用域链、闭包，这其实是一整套相关的东西，之前&lt;a href=&quot;https://chorer.github.io/2019/03/04/F-%E9%97%AD%E5%8C%85/&quot;&gt;转载的文章&lt;/a&gt;也有讲到这些。下面两篇文章会更加详细地解释这些概念。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://chorer.github.io/2019/04/08/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E5%92%8C%E6%89%A7%E8%A1%8C%E6%A0%88/&quot;&gt;深入理解执行上下文和执行栈&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://chorer.github.io/2019/04/10/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%98%E9%87%8F%E5%AF%B9%E8%B1%A1%E3%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E5%92%8C%E9%97%AD%E5%8C%85/&quot;&gt;深入理解变量对象、作用域链和闭包&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/execution%20context/ecstack.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="执行上下文" scheme="https://chorer.github.io/tags/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    
      <category term="词法环境" scheme="https://chorer.github.io/tags/%E8%AF%8D%E6%B3%95%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>PureBlue主题更新记录</title>
    <link href="https://chorer.github.io/2019/04/04/P-PureBlue%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95/"/>
    <id>https://chorer.github.io/2019/04/04/P-PureBlue主题更新记录/</id>
    <published>2019-04-04T11:19:42.056Z</published>
    <updated>2019-04-03T04:46:04.761Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;2019-4-2&quot;&gt;&lt;a href=&quot;#2019-4-2&quot; class=&quot;headerlink&quot; title=&quot;2019.4.2&quot;&gt;&lt;/a&gt;2019.4.2&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;优化了部分代码&lt;/li&gt;&lt;li&gt;(总算)引入分享插件，只需要在主题的&lt;code&gt;config.yml&lt;/code&gt;文件配置即可。之前以为没法在&lt;code&gt;script&lt;/code&gt;标签里写ejs，所以采用了在js里拼接字符串的方法，想想真是又笨又奇葩。&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;2019-4-1&quot;&gt;&lt;a href=&quot;#2019-4-1&quot; class=&quot;headerlink&quot; title=&quot;2019.4.1&quot;&gt;&lt;/a&gt;2019.4.1&lt;/h2&gt;&lt;p&gt;愚人节快乐~~ 几个优化阅读体验的小变动&lt;/p&gt;&lt;ul&gt;&lt;li&gt;引入了font-awesome库，增加了一些图标&lt;/li&gt;&lt;li&gt;现在TOC目录中的标题会随着屏幕滚动而对应高亮。为了醒目，&lt;del&gt;暂时采用了我比较喜欢的荧光黄&lt;/del&gt;采用红色&lt;/li&gt;&lt;li&gt;取消纯黑字体，现在阅读文章不会那么晃眼了&lt;/li&gt;&lt;li&gt;修复代码块背景显示不正常的问题&lt;/li&gt;&lt;li&gt;增加文章字数统计和阅读时长统计，可配置&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;2019-3-31&quot;&gt;&lt;a href=&quot;#2019-3-31&quot; class=&quot;headerlink&quot; title=&quot;2019.3.31&quot;&gt;&lt;/a&gt;2019.3.31&lt;/h2&gt;&lt;p&gt;最近确实还是挺忙的。虽说主题做出来了，但是一些大大小小的毛病或者bug总是让我心里不太舒服，所以花了一些功夫进行了修复，并终于发布了第一个版本。现在看起来已经好很多了（也已经与初版完全不同了）。当然，因为能力不足，所以响应式布局一直没做出来（手机党の噩梦）。&lt;br&gt;
    
    </summary>
    
      <category term="Project" scheme="https://chorer.github.io/categories/Project/"/>
    
    
      <category term="Hexo" scheme="https://chorer.github.io/tags/Hexo/"/>
    
      <category term="PureBlue" scheme="https://chorer.github.io/tags/PureBlue/"/>
    
  </entry>
  
  <entry>
    <title>深入理解原型和继承</title>
    <link href="https://chorer.github.io/2019/03/31/F-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF/"/>
    <id>https://chorer.github.io/2019/03/31/F-深入理解原型和继承/</id>
    <published>2019-03-31T12:08:38.000Z</published>
    <updated>2019-04-10T06:27:14.231Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/inheritance.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="继承" scheme="https://chorer.github.io/tags/%E7%BB%A7%E6%89%BF/"/>
    
      <category term="原型" scheme="https://chorer.github.io/tags/%E5%8E%9F%E5%9E%8B/"/>
    
      <category term="对象" scheme="https://chorer.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>折腾博客系列之发布自己的主题：PureBlue</title>
    <link href="https://chorer.github.io/2019/03/28/T-%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84Hexo%E4%B8%BB%E9%A2%98--PureBlue/"/>
    <id>https://chorer.github.io/2019/03/28/T-发布自己的Hexo主题--PureBlue/</id>
    <published>2019-03-27T16:00:00.000Z</published>
    <updated>2019-04-05T11:04:43.103Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;博客内容固然是最重要的，但是抛开内容不讲，博客本身也应该带有自己的Tag，而不是光会用别人的轮子。&lt;br&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
      <category term="Hexo" scheme="https://chorer.github.io/tags/Hexo/"/>
    
      <category term="PureBlue" scheme="https://chorer.github.io/tags/PureBlue/"/>
    
  </entry>
  
  <entry>
    <title>&lt;译&gt;创建一个Hexo主题-Part1:首页</title>
    <link href="https://chorer.github.io/2019/03/27/Trs-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E4%B8%BB%E9%A2%98%E4%B9%8BPart1/"/>
    <id>https://chorer.github.io/2019/03/27/Trs-创建一个Hexo主题之Part1/</id>
    <published>2019-03-26T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:21.866Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;前言：&lt;br&gt;本系列文章翻译自全栈工程师Jonathan Klughertz的&lt;a href=&quot;http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-1-Index/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客文章&lt;/a&gt;，将会用三个part详细讲解如何制作一个Hexo主题。我自己从这几篇文章中受益良多，所以心想干脆翻译一下，于是有了这篇译文。&lt;br&gt;我不是学翻译出身，若有翻译错误或是不到位之处，请指正。&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://chorer.github.io/categories/Translation/"/>
    
    
      <category term="hexo theme" scheme="https://chorer.github.io/tags/hexo-theme/"/>
    
  </entry>
  
  <entry>
    <title>inline-blcok和float</title>
    <link href="https://chorer.github.io/2019/03/27/F-inline-block%E5%92%8Cfloat/"/>
    <id>https://chorer.github.io/2019/03/27/F-inline-block和float/</id>
    <published>2019-03-26T16:00:00.000Z</published>
    <updated>2019-04-05T10:59:05.793Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;h3 id=&quot;1-比对：&quot;&gt;&lt;a href=&quot;#1-比对：&quot; class=&quot;headerlink&quot; title=&quot;1.比对：&quot;&gt;&lt;/a&gt;1.比对：&lt;/h3&gt;&lt;p&gt;简单比对一下div+css布局中的inline-block和float的特点，同时附上使用inline-block之后元素之间产生空隙的解决方法。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="HTML &amp; CSS" scheme="https://chorer.github.io/categories/Front-end/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;译&gt;创建一个Hexo主题-Part2:其他页面</title>
    <link href="https://chorer.github.io/2019/03/27/Trs-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E4%B8%BB%E9%A2%98%E4%B9%8BPart2/"/>
    <id>https://chorer.github.io/2019/03/27/Trs-创建一个Hexo主题之Part2/</id>
    <published>2019-03-26T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:26.769Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;前言：&lt;br&gt;本系列文章翻译自全栈工程师Jonathan Klughertz的&lt;a href=&quot;http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-2-Other-Pages/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客文章&lt;/a&gt;，将会用三个part详细讲解如何制作一个Hexo主题。我自己从这几篇文章中受益良多，所以心想干脆翻译一下，于是有了这篇译文。&lt;br&gt;我不是学翻译出身，若有翻译错误或是不到位之处，请指正。&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://chorer.github.io/categories/Translation/"/>
    
    
      <category term="hexo theme" scheme="https://chorer.github.io/tags/hexo-theme/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3插件简易使用教程</title>
    <link href="https://chorer.github.io/2019/03/26/To-Sublime%20Text3%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://chorer.github.io/2019/03/26/To-Sublime Text3简易使用教程/</id>
    <published>2019-03-25T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:06.403Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/%E7%BF%BB%E8%AF%91/%E4%B8%8B%E8%BD%BD.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Tool" scheme="https://chorer.github.io/categories/Tool/"/>
    
    
  </entry>
  
  <entry>
    <title>折腾博客系列之博客搭建：Hexo+Github pages</title>
    <link href="https://chorer.github.io/2019/03/24/T-hexo+github%20pages%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E6%84%9F%E6%83%B3/"/>
    <id>https://chorer.github.io/2019/03/24/T-hexo+github pages部署个人博客网站的感想/</id>
    <published>2019-03-24T07:35:45.000Z</published>
    <updated>2019-04-05T11:01:57.341Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;初衷：之前我习惯用印象笔记进行知识的收集和整理，虽然很好用，但终归只适合输入而不适合输出。我需要的是一个更加开放的平台，在这上面可以输出： 1.&lt;strong&gt;学习的收获 ；2.生活的感想 ；3.有价值的分享&lt;/strong&gt;，因此有了这个博客网站。&lt;/p&gt;&lt;p&gt;用hexo+github pages 可以很方便地搭建一个个人博客网站，不需要购买域名和服务器，只需要按部就班操作即可。我自己大概是花了两三个小时搞定，主要是因为对git bash的使用不够熟悉，因此走了一些弯路。实际上动作快的话半个小时就可以搞定。下面是对部署过程的大概介绍，以及&lt;strong&gt;必须注意的事项&lt;/strong&gt;（划重点，也就是所谓的“坑”）。由于本文参考了大量博客，所以在文末我会列出原文链接。&lt;/p&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
      <category term="博客搭建" scheme="https://chorer.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="https://chorer.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>折腾博客系列之编辑工具的选择</title>
    <link href="https://chorer.github.io/2019/03/24/To-%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>https://chorer.github.io/2019/03/24/To-编辑工具的选择/</id>
    <published>2019-03-23T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:14.120Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;Hexo是静态博客网站，必须先在本地编辑好md文件再推送到网站上去—md文件也就是所谓的用markdown语法编写内容的文件。“工欲善其事，必先利其器”，因此我们需要一个合适的markdown编辑工具，它必须具备以下特点：&lt;br&gt;1.可导出md文件到本地，并随时进行修改&lt;br&gt;2.可提供分屏预览，支持同步滚动和定位&lt;br&gt;3.启动时响应速度快，编辑时渲染速度快&lt;/p&gt;&lt;p&gt;以下是一些工具在markdown编写方面的优劣比较，可酌情进行选择。&lt;br&gt;（平台：windows）&lt;br&gt;
    
    </summary>
    
      <category term="Tool" scheme="https://chorer.github.io/categories/Tool/"/>
    
    
      <category term="编辑工具" scheme="https://chorer.github.io/tags/%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>大一下的一些计划</title>
    <link href="https://chorer.github.io/2019/03/23/T-%E5%A4%A7%E4%B8%80%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A1%E5%88%92/"/>
    <id>https://chorer.github.io/2019/03/23/T-大一下的一些计划/</id>
    <published>2019-03-22T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:53.681Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;1.关于英语&lt;br&gt;准备四级考试，重点是听力和写作；&lt;/p&gt;&lt;p&gt;2.前端&lt;/p&gt;&lt;p&gt;2.1. 旧东西的收尾，具体来说包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;del&gt;培训视频（进阶系列）&lt;/del&gt;&lt;/li&gt;&lt;li&gt;SegmentFault上js进阶的相关文章。由于是js中的难点，并且在面试中出现比较多，所以慢慢来。打算是每周攻克一个或两个&lt;br&gt;【进阶1期】 调用堆栈&lt;br&gt;【进阶2期】 作用域闭包&lt;br&gt;【进阶3期】 this全面解析&lt;br&gt;【进阶4期】 深浅拷贝原理&lt;br&gt;&lt;del&gt;【进阶5期】 原型Prototype&lt;/del&gt;&lt;br&gt;【进阶6期】 高阶函数&lt;br&gt;【进阶7期】 事件机制&lt;br&gt;【进阶8期】 Event Loop原理&lt;br&gt;【进阶9期】 Promise原理&lt;br&gt;【进阶10期】Async/Await原理&lt;br&gt;【进阶11期】防抖/节流原理&lt;br&gt;【进阶12期】模块化详解&lt;br&gt;【进阶13期】ES6重难点&lt;br&gt;【进阶14期】计算机网络概述&lt;br&gt;【进阶15期】浏览器渲染原理
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>游戏往事</title>
    <link href="https://chorer.github.io/2019/03/18/G-%E6%B8%B8%E6%88%8F%E5%BE%80%E4%BA%8B/"/>
    <id>https://chorer.github.io/2019/03/18/G-游戏往事/</id>
    <published>2019-03-17T16:00:00.000Z</published>
    <updated>2019-04-05T11:01:34.556Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;之前就说过这个博客不会纯记录自己的学习心得，而是会适当地聊聊自己的一些感想，其中当然也包括游戏。游戏被称为“第九艺术”，艺术自然不止是带给人娱乐感。&lt;/p&gt;&lt;h4 id=&quot;gt-gt-2012年：《刺客信条II》&quot;&gt;&lt;a href=&quot;#gt-gt-2012年：《刺客信条II》&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt;&amp;gt;2012年：《刺客信条II》&quot;&gt;&lt;/a&gt;&amp;gt;&amp;gt;2012年：《刺客信条II》&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/1.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Gaming" scheme="https://chorer.github.io/categories/Gaming/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在Stack Overflow规范提问</title>
    <link href="https://chorer.github.io/2019/03/17/T-Stack%20Overflow%E6%8F%90%E9%97%AE%E6%8C%87%E5%8D%97%E5%92%8C%E5%BF%85%E5%A4%87%E6%9C%AF%E8%AF%AD%E6%B1%87%E6%80%BB/"/>
    <id>https://chorer.github.io/2019/03/17/T-Stack Overflow提问指南和必备术语汇总/</id>
    <published>2019-03-16T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:45.134Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/So.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Thinking" scheme="https://chorer.github.io/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>原型式继承和类式继承</title>
    <link href="https://chorer.github.io/2019/03/17/F-%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF%E5%92%8C%E7%B1%BB%E5%BC%8F%E7%BB%A7%E6%89%BF/"/>
    <id>https://chorer.github.io/2019/03/17/F-原型式继承和类式继承/</id>
    <published>2019-03-16T16:00:00.000Z</published>
    <updated>2019-04-07T07:54:03.243Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;Java和JavaScript都是面向对象的语言，但二者的继承方式截然不同。前者采用类式继承（classical inheritence），也是大多数面向对象语言的继承方式。而后者采用原型式继承（prototype ineritence），因此称JavaScript为基于对象更加合适。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>经典面试题解析</title>
    <link href="https://chorer.github.io/2019/03/17/F-%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <id>https://chorer.github.io/2019/03/17/F-经典面试题解析/</id>
    <published>2019-03-16T16:00:00.000Z</published>
    <updated>2019-04-05T11:00:18.733Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;本篇博客专门用于收集各类经典面试题，并给出相关的解题思路和原理。&lt;/p&gt;&lt;h3 id=&quot;1-考点：块级作用域和闭包&quot;&gt;&lt;a href=&quot;#1-考点：块级作用域和闭包&quot; class=&quot;headerlink&quot; title=&quot;1.考点：块级作用域和闭包&quot;&gt;&lt;/a&gt;1.考点：块级作用域和闭包&lt;/h3&gt;&lt;p&gt;先看一道很经典的面试题&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;var a=[];
for(var i=0;i&amp;lt;10;i++){
    a[i] = function(){
        console.log(i);
    }
}                     
console.log(a[6]);
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;译&gt;如何用原生JS打造一款简易谷歌插件</title>
    <link href="https://chorer.github.io/2019/03/10/Trs-%E5%A6%82%E4%BD%95%E7%94%A8%E5%8E%9F%E7%94%9Fjs%E6%89%93%E9%80%A0%E4%B8%80%E6%AC%BE%E7%AE%80%E6%98%93%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6/"/>
    <id>https://chorer.github.io/2019/03/10/Trs-如何用原生js打造一款简易谷歌插件/</id>
    <published>2019-03-09T16:00:00.000Z</published>
    <updated>2019-04-05T11:02:36.343Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;之前就想翻译文章来着，所以这回拿了Medium上的一篇博文下手。确实没有想象中的那么容易，因为你不得不仔细斟酌每个字词。我不是学翻译的，如有不对，欢迎指正。&lt;/p&gt;&lt;p&gt;原文: &lt;a href=&quot;https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-how-to-build-a-simple-chrome-extension-in-vanilla-javascript-e52b2994aeeb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to Build a Simple Chrome Extension in Vanilla JavaScript&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://chorer.github.io/categories/Translation/"/>
    
    
  </entry>
  
  <entry>
    <title>伪类和伪元素</title>
    <link href="https://chorer.github.io/2019/03/10/F-%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/"/>
    <id>https://chorer.github.io/2019/03/10/F-伪类和伪元素/</id>
    <published>2019-03-09T16:00:00.000Z</published>
    <updated>2019-04-05T11:00:59.592Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;h3 id=&quot;1-伪类和伪元素的引入&quot;&gt;&lt;a href=&quot;#1-伪类和伪元素的引入&quot; class=&quot;headerlink&quot; title=&quot;1.伪类和伪元素的引入&quot;&gt;&lt;/a&gt;1.伪类和伪元素的引入&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;CSS introduces the concepts of pseudo-elements and pseudo-classes to permit formatting based on information that lies outside the document tree.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;CSS 引入伪类和伪元素的概念是为了格式化文档树以外的信息。也就是说，伪类和伪元素是用来修饰不在文档树中的部分，比如，一句话中的第一个字母，或者是列表中的第一个元素。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="HTML &amp; CSS" scheme="https://chorer.github.io/categories/Front-end/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>DOM Core 与 HTML-DOM</title>
    <link href="https://chorer.github.io/2019/03/08/F-DOM%20Core%20%E5%92%8CHTML%20DOM/"/>
    <id>https://chorer.github.io/2019/03/08/F-DOM Core 和HTML DOM/</id>
    <published>2019-03-07T16:00:00.000Z</published>
    <updated>2019-04-05T10:58:30.461Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Apr 14 2019 16:49:43 GMT+0800 (GMT+08:00) --&gt;&lt;h4 id=&quot;1-DOM&quot;&gt;&lt;a href=&quot;#1-DOM&quot; class=&quot;headerlink&quot; title=&quot;1.DOM&quot;&gt;&lt;/a&gt;1.DOM&lt;/h4&gt;&lt;p&gt;DOM（文档对象模型）是由W3C制定的一套访问和操作XML（eXtensible Markup Language）文档的标准，即API。比如DOM告诉JavaScript引擎如何在浏览器窗口中显示和操作XML创建的标记（Tag）。&lt;/p&gt;&lt;p&gt;DOM与特定的平台、浏览器、语言无关，很多种语言都实现了DOM，比如因为JavaScript和PHP都实现了DOM，所以 JavaScript中有getElementsByTagName()方法，PHP中也有 getElementsByTagName()，getElementsByTagName()方法是DOM规定的访问XML文档的接口。&lt;br&gt;
    
    </summary>
    
      <category term="Front-end" scheme="https://chorer.github.io/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/Front-end/JavaScript/"/>
    
    
      <category term="概念" scheme="https://chorer.github.io/tags/%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
</feed>
