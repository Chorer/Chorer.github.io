<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chor</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chorer.github.io/"/>
  <updated>2019-02-12T09:15:48.921Z</updated>
  <id>https://chorer.github.io/</id>
  
  <author>
    <name>Chor</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【原型】JavaScript原型等概念的理解</title>
    <link href="https://chorer.github.io/2019/02/12/%E3%80%90%E5%8E%9F%E5%9E%8B%E3%80%91JavaScript%E5%8E%9F%E5%9E%8B%E7%AD%89%E6%A6%82%E5%BF%B5%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>https://chorer.github.io/2019/02/12/【原型】JavaScript原型等概念的理解/</id>
    <published>2019-02-12T09:07:15.544Z</published>
    <updated>2019-02-12T09:15:48.921Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-创建对象的方法&quot;&gt;&lt;a href=&quot;#1-创建对象的方法&quot; class=&quot;headerlink&quot; title=&quot;1.创建对象的方法&quot;&gt;&lt;/a&gt;1.创建对象的方法&lt;/h2&gt;&lt;p&gt;在了解原型链之前，首先先了解一下创建对象的几种方式，介绍以下三种。&lt;br&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/%E5%8E%9F%E5%9E%8B1.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
// 第一种方式：字面量
var o1 = {name: &amp;apos;o1&amp;apos;}
var o2 = new Object({name: &amp;apos;o2&amp;apos;})
// 第二种方式：构造函数
var M = function (name) { this.name = name; }
var o3 = new M(&amp;apos;o3&amp;apos;)
// 第三种方式：Object.create
var p = {name: &amp;apos;p&amp;apos;}
var o4 = Object.create(p)

console.log(o1)
console.log(o2)
console.log(o3)
console.log(o4)

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打印结果：&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://chorer.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="继承" scheme="https://chorer.github.io/tags/%E7%BB%A7%E6%89%BF/"/>
    
      <category term="原型" scheme="https://chorer.github.io/tags/%E5%8E%9F%E5%9E%8B/"/>
    
      <category term="对象" scheme="https://chorer.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>英伦摇滚入门：20支英国摇滚乐队</title>
    <link href="https://chorer.github.io/2019/02/11/%E8%8B%B1%E4%BC%A6%E6%91%87%E6%BB%9A%E5%85%A5%E9%97%A8%EF%BC%9A20%E6%94%AF%E8%8B%B1%E5%9B%BD%E6%91%87%E6%BB%9A%E4%B9%90%E9%98%9F/"/>
    <id>https://chorer.github.io/2019/02/11/英伦摇滚入门：20支英国摇滚乐队/</id>
    <published>2019-02-11T12:55:00.000Z</published>
    <updated>2019-02-12T06:19:47.326Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前看到的一篇关于英国摇滚乐队的总结。还挺好的，不全是英伦摇滚。排名不分先后，当然，我还是偏爱Oasis。&lt;/p&gt;
&lt;h4 id=&quot;1-The-Beatles（披头士乐队-甲壳虫乐队）&quot;&gt;&lt;a href=&quot;#1-The-Beatles（披头士乐队-甲壳虫乐队）&quot; class=&quot;headerlink&quot; title=&quot;1. The Beatles（披头士乐队/甲壳虫乐队）&quot;&gt;&lt;/a&gt;1. The Beatles（披头士乐队/甲壳虫乐队）&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/myblog/p106505_1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;这支才华横溢的英国乐队就不用多说了，几乎是英国摇滚的代名词，屹立半个世纪不倒，他们的作品现在还传颂世界。The Beatles（披头士乐队）虽然早已不复存在，但是他们却奠定了英式摇滚的基本基调，在国际音乐界享有盛誉。他们的贵族式的优雅反击直击摇滚的核心精神：为普通人发出声音和呐喊。爱和自由、反战是披头士永恒的创作主题。披头士有两位灵魂人物，一位是John Lennon（约翰·列侬），一位是James Paul McCartney（保罗·麦卡特尼）。喜欢这支乐队的朋友可以看看乐评《最爱那一世的疯狂——“披头士热”下的英伦风情》&lt;br&gt;经典专辑：《Sergeant Pepper’s Lonely Hearts Club Band》、《Abbey Road》、《Let It Be》、《Rubber Soul》、《Help!》&lt;/p&gt;
    
    </summary>
    
      <category term="音乐" scheme="https://chorer.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="英伦摇滚" scheme="https://chorer.github.io/categories/%E9%9F%B3%E4%B9%90/%E8%8B%B1%E4%BC%A6%E6%91%87%E6%BB%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>【数据类型】null和undefined</title>
    <link href="https://chorer.github.io/2019/02/10/null%E5%92%8Cundefined/"/>
    <id>https://chorer.github.io/2019/02/10/null和undefined/</id>
    <published>2019-02-10T12:08:34.756Z</published>
    <updated>2019-02-11T12:22:58.382Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-undefined在变量声明中的体现：&quot;&gt;&lt;a href=&quot;#一-undefined在变量声明中的体现：&quot; class=&quot;headerlink&quot; title=&quot;一. undefined在变量声明中的体现：&quot;&gt;&lt;/a&gt;一. undefined在变量声明中的体现：&lt;/h2&gt;&lt;p&gt;1）声明了、但是没有初始化的变量：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var aa;
alert(aa);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器会弹出窗口显示 &lt;code&gt;undefined&lt;/code&gt;。因为对于使用了 &lt;code&gt;var&lt;/code&gt; 声明但没有进行初始化定义的变量, 其值默认为 &lt;code&gt;undefined&lt;/code&gt;.&lt;br&gt;2） 未声明的变量(1)：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alert(aa);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器不会弹出任何东西. 因为 aa 是没有声明的变量。打开 chrome 浏览器的控制台会看到报错如下：&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="https://chorer.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://chorer.github.io/tags/JavaScript/"/>
    
      <category term="数据类型" scheme="https://chorer.github.io/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github pages部署个人博客网站的感想</title>
    <link href="https://chorer.github.io/2019/02/10/hexo+github%20pages%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E6%84%9F%E6%83%B3/"/>
    <id>https://chorer.github.io/2019/02/10/hexo+github pages部署个人博客网站的感想/</id>
    <published>2019-02-10T09:02:40.504Z</published>
    <updated>2019-02-11T12:18:16.116Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;题外话：之前我习惯用印象笔记进行知识的剪藏和整理，但是印象笔记本身带给我一种相对封闭的感觉，更像是比较私人的产品；而博客则相反，它更多是面向大众的、开放的，有利于个人经验的输出和知识的共享，所以拥有自己的博客非常有必要。拿博客园和CSDN来说，这两者虽然可以满足写博客的需求，但是自定义程度不够高，缺少一些个性tag。既然如此，为什么我们不自己搭建一个个人博客网站呢？&lt;/p&gt;
&lt;p&gt;用hexo+github pages 搭建个人博客网站是极其方便的，不需要购买域名和服务器，只需要按部就班操作，就可以在短时间内成功拥有自己的一个网站。我自己大概是花了两三个小时搞定，主要是因为对git bash的使用不够熟悉，因此走了一些弯路。实际上动作快的话半个小时就可以搞定。下面是对部署过程的大概介绍，以及&lt;strong&gt;必须注意的事项&lt;/strong&gt;（划重点，也就是所谓的“坑”）。由于本文参考了大量博客，所以在文末我会列出原文链接。&lt;/p&gt;
    
    </summary>
    
      <category term="心得和感想" scheme="https://chorer.github.io/categories/%E5%BF%83%E5%BE%97%E5%92%8C%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="博客" scheme="https://chorer.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="网站搭建" scheme="https://chorer.github.io/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Github" scheme="https://chorer.github.io/tags/Github/"/>
    
      <category term="Hexo" scheme="https://chorer.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>jQuery AJAX load()方法中代码执行顺序的问题</title>
    <link href="https://chorer.github.io/2019/02/10/jQuery%20AJAX%20load()%E6%96%B9%E6%B3%95%E4%B8%AD%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://chorer.github.io/2019/02/10/jQuery AJAX load()方法中代码执行顺序的问题/</id>
    <published>2019-02-09T17:10:01.182Z</published>
    <updated>2019-02-10T15:38:44.630Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;问题来源于菜鸟教程介绍jq load() 方法时用的一个实例：&lt;br&gt;&lt;strong&gt;js：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;quot;button&amp;quot;).click(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&amp;quot;#div1&amp;quot;).load(&amp;quot;demo_test.txt&amp;quot;,function(responseTxt,statusTxt,xhr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(statusTxt==&amp;quot;success&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      alert(&amp;quot;外部内容加载成功!&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(statusTxt==&amp;quot;error&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      alert(&amp;quot;Error: &amp;quot;+xhr.status+&amp;quot;: &amp;quot;+xhr.statusText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;html：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt;&amp;lt;h2&amp;gt;使用 jQuery AJAX 修改该文本&amp;lt;/h2&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;button&amp;gt;获取外部内容&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里作为load方法参数的函数是一个回调函数。什么是回调函数呢？我们先来看看回调的英文定义：&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://chorer.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://chorer.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://chorer.github.io/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="https://chorer.github.io/tags/AJAX/"/>
    
      <category term="浏览器渲染" scheme="https://chorer.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
</feed>
